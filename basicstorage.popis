Pou≈æit√≠ GameResultSchema.json
Co to je: univerz√°ln√≠ form√°t pro v√Ωsledky v≈°ech her v iSenses.
Jak to funguje: ka≈æd√° hra po dohr√°n√≠ zavol√° emitScore(), kter√© po≈°le JSON podle tohoto sch√©matu.
Struktura
{
  "sessionId": "string",
  "taskId": "string",
  "durationMs": "number",
  "metrics": {          // z√°kladn√≠ data, v≈ædy stejn√© kl√≠ƒçe
    "completionTimeSec": "number",
    "errors": "number",
    "reactionTimeAvgMs": "number",
    "reactionTimeBestMs": "number",
    "accuracyPct": "number"
  },
  "details": { },       // specifick√° data hry (voliteln√°, r≈Øzn√© kl√≠ƒçe)
  "createdAt": "timestamp"
}
Ulo≈æen√≠ do DB
Tabulka game_results:
id, sessionId, taskId, durationMs, metrics (JSON), details (JSON), createdAt.
Zobrazen√≠ v iSenses
metrics = v≈ædy vid√≠ klient (rychl√Ω p≈ôehled).
details = zobraz√≠ se po rozkliku (tren√©r, detailn√≠ logy).
üëâ Shrnut√≠: Ka≈æd√° hra = JSON podle GameResultSchema ‚Üí ulo≈æit cel√Ω ‚Üí metrics pro p≈ôehled, details pro detail.
